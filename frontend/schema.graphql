# source: https://api-wwh.codevillains.me/graphql
# timestamp: Sat Feb 29 2020 21:08:54 GMT+0100 (Central European Standard Time)

type CreateExampleResult {
  result: String
  errors: [String!]
}

input ExampleInput {
  id: String!
  value: String!
}

type Exercise {
  id: String!
  imgurl: String!
  name: String!
}

type Gym {
  id: String!
  name: String!
  location: Location!
  coachIds: [String!]!
}

type Location {
  lat: Float!
  lng: Float!
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

enum MuscleGroup {
  Arms
  Legs
  Shoulders
  Back
  Chest
}

type Mutation {
  addExample(example: ExampleInput!): CreateExampleResult!
  addWorkout(training: WorkoutInput!): Workout
  updateWorkout(training: WorkoutInput!): Workout
}

type PlannedExercise {
  trainingId: String!
  plannedSeries: [Series!]!
  doneSeries: [Series!]!
  restAfter: Int!
  id: String!
  exercise: Exercise
}

input PlannedExerciseInput {
  exerciseId: String!
  trainingId: String!
  plannedSeries: [SeriesInput!]!
  doneSeries: [SeriesInput!]!
  restAfter: Int!
}

type Query {
  gyms(lat: Float!, lng: Float!): [Gym!]!
  workouts(
    from: Long!
    to: Long!
    coachId: String
    clientId: String
  ): [Workout!]!

  workout(workoutId: String!): Workout
  exercises: [Exercise!]!
}

type Series {
  id: String!
  reps: Int!
  rest: Int!
  weight: Int
}

input SeriesInput {
  id: String!
  reps: Int!
  rest: Int!
  weight: Int
}

type Workout {
  id: String!
  name: String!
  muscleGroup: [MuscleGroup!]!
  coachId: String
  clientId: String!
  dateFrom: Long!
  exercises: [PlannedExercise!]!
  dateTo: Long!
  inperson: Boolean!
}

input WorkoutInput {
  id: String!
  name: String!
  muscleGroup: [String!]!
  coachId: String
  clientId: String!
  dateFrom: Long!
  dateTo: Long!
  exercises: [PlannedExerciseInput!]!
  inperson: Boolean!
}
